/*! sprintf-js | Alexandru Marasteanu <hello@alexei.ro> (http://alexei.ro/) | BSD-3-Clause */

!function(a){"use strict";if("function"==typeof bootstrap)bootstrap("promise",a);else if("object"==typeof exports&&"object"==typeof module)module.exports=a();else if("function"==typeof define&&define.amd)define(a);else if("undefined"!=typeof ses){if(!ses.ok())return;ses.makeSprintf=a}else if("undefined"!=typeof angular)angular.module("sprintf",[]).factory("formatter",a),angular.module("sprintf.filter",["sprintf"]).filter("sprintf",function(a){return function(){return a.sprintf.apply(null,arguments)}}),angular.module("sprintf.fmt",["sprintf"]).filter("fmt",["$filter",function(a){return a("sprintf")}]),angular.module("sprintf.vsprintf",["sprintf"]).filter("vsprintf",function(a){return function(b,c){return a.vsprintf(b,c)}}),angular.module("sprintf.vfmt",["sprintf.vsprintf"]).filter("vfmt",["$filter",function(a){return a("vsprintf")}]);else{if("undefined"==typeof window&&"undefined"==typeof self)throw new Error("This environment was not anticipated by sprintf. Please file a bug.");var b="undefined"!=typeof window?window:self,c=b.sprintf;b.sprintf=a(),b.spritf.noConflict=function(){return b.sprintf=c,this}}}(function(){function a(){var b=arguments[0],c=a.cache;return c[b]&&c.hasOwnProperty(b)||(c[b]=a.parse(b)),a.format.call(null,c[b],arguments)}function b(a){return Object.prototype.toString.call(a).slice(8,-1).toLowerCase()}function c(a,b){return Array(b+1).join(a)}var d={not_string:/[^s]/,number:/[diefg]/,json:/[j]/,not_json:/[^j]/,text:/^[^\x25]+/,modulo:/^\x25{2}/,placeholder:/^\x25(?:([1-9]\d*)\$|\(([^\)]+)\))?(\+)?(0|'[^$])?(-)?(\d+)?(?:\.(\d+))?([b-gijosuxX])/,key:/^([a-z_][a-z_\d]*)/i,key_access:/^\.([a-z_][a-z_\d]*)/i,index_access:/^\[(\d+)\]/,sign:/^[\+\-]/};a.format=function(e,f){var g,h,i,j,k,l,m,n=1,o=e.length,p="",q=[],r=!0,s="";for(h=0;o>h;h++)if(p=b(e[h]),"string"===p)q[q.length]=e[h];else if("array"===p){if(j=e[h],j[2])for(g=f[n],i=0;i<j[2].length;i++){if(!g.hasOwnProperty(j[2][i]))throw new Error(a("[sprintf] property '%s' does not exist",j[2][i]));g=g[j[2][i]]}else g=j[1]?f[j[1]]:f[n++];if("function"===b(g)&&(g=g()),d.not_string.test(j[8])&&d.not_json.test(j[8])&&"number"!=b(g)&&isNaN(g))throw new TypeError(a("[sprintf] expecting number but found %s",b(g)));switch(d.number.test(j[8])&&(r=g>=0),j[8]){case"b":g=g.toString(2);break;case"c":g=String.fromCharCode(g);break;case"d":case"i":g=parseInt(g,10);break;case"j":g=JSON.stringify(g,null,j[6]?parseInt(j[6]):0);break;case"e":g=j[7]?g.toExponential(j[7]):g.toExponential();break;case"f":g=j[7]?parseFloat(g).toFixed(j[7]):parseFloat(g);break;case"g":g=j[7]?parseFloat(g).toPrecision(j[7]):parseFloat(g);break;case"o":g=g.toString(8);break;case"s":g=(g=String(g))&&j[7]?g.substring(0,j[7]):g;break;case"u":g>>>=0;break;case"x":g=g.toString(16);break;case"X":g=g.toString(16).toUpperCase()}d.json.test(j[8])?q[q.length]=g:(!d.number.test(j[8])||r&&!j[3]?s="":(s=r?"+":"-",g=g.toString().replace(d.sign,"")),l=j[4]?"0"===j[4]?"0":j[4].charAt(1):" ",m=j[6]-(s+g).length,k=j[6]&&m>0?c(l,m):"",q[q.length]=j[5]?s+g+k:"0"===l?s+k+g:k+s+g)}return q.join("")},a.cache={},a.parse=function(a){for(var b=a,c=[],e=[],f=0;b;){if(null!==(c=d.text.exec(b)))e[e.length]=c[0];else if(null!==(c=d.modulo.exec(b)))e[e.length]="%";else{if(null===(c=d.placeholder.exec(b)))throw new SyntaxError("[sprintf] unexpected placeholder");if(c[2]){f|=1;var g=[],h=c[2],i=[];if(null===(i=d.key.exec(h)))throw new SyntaxError("[sprintf] failed to parse named argument key");for(g[g.length]=i[1];""!==(h=h.substring(i[0].length));)if(null!==(i=d.key_access.exec(h)))g[g.length]=i[1];else{if(null===(i=d.index_access.exec(h)))throw new SyntaxError("[sprintf] failed to parse named argument key");g[g.length]=i[1]}c[2]=g}else f|=2;if(3===f)throw new Error("[sprintf] mixing positional and named placeholders is not (yet) supported");e[e.length]=c}b=b.substring(c[0].length)}return e};var e=function(b,c,d){return d=(c||[]).slice(0),d.splice(0,0,b),a.apply(null,d)};return{sprintf:a,vsprintf:e}});
//# sourceMappingURL=sprintf.min.js.map